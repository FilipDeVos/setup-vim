""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" options for gvim on Windows 7
" 
" Author: Filip De Vos
" Last updated: 15 April 2016 
"
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


try
    if has('win32') || has('win64')
        " Set the default register to the windows clipboard
        set clipboard=unnamed 

        " shortcuts to get here and reload
        nmap ,g :e $HOME\_gvimrc<CR>
        autocmd! bufwritepost gvimrc source $HOME/_gvimrc

        " set the font of graphical vimVIM
        set guifont=Consolas:h15 " big font because I am old and blind
        "I am struggling to get the powerline patched font to work
        "set guifont=Powerline\ Consolas:h15 " <~ set the font
        "set encoding=utf-8                  " <~ set the encoding
        "let g:airline_powerline_fonts=1     " <~ activate the font in airline

    else
        " shortcuts to get here and reload
        nmap ,g :e $HOME\.gvimrc<CR>
        autocmd! bufwritepost gvimrc source $HOME/.gvimrc

        set guifont=Inconsolata:h15
    endif
catch
endtry

" Remove menu bar and toolbar
set guioptions-=m
set guioptions-=T

" Hide the mouse pointer when typing
set mousehide

" make the screen a bit bigger.
set lines=40
set columns=120 

" To enable the saving and restoring of screen positions.
let g:screen_size_restore_pos = 1

" To save and restore screen for each Vim instance.
" This is useful if you routinely run more than one Vim instance.
" For all Vim to use the same settings, change this to 0.
let g:screen_size_by_vim_instance = 1

" Map new tab to Ctrl+n 
map <C-n> <ESC><ESC>:tabnew<CR>

" Map Ctrl-A to "Select All" (ripped from mswin.vim)
noremap <C-A> gggH<C-O>G
inoremap <C-A> <C-O>gg<C-O>gH<C-O>G
cnoremap <C-A> <C-C>gggH<C-O>G
onoremap <C-A> <C-C>gggH<C-O>G
snoremap <C-A> <C-C>gggH<C-O>G
xnoremap <C-A> <C-C>ggVG

" Open file dialog in a new buffer 
map <F10> :browse enew ~\Documents\<CR>

" Map Ctrl+Up to enlarge font and Ctrl+Down to shrink font.
nnoremap <C-Up> :silent! let &guifont = substitute(&guifont,':h\zs\d\+','\=eval(submatch(0)+1)','')<CR>
nnoremap <C-Down> :silent! let &guifont = substitute(&guifont,':h\zs\d\+','\=eval(submatch(0)-1)','')<CR>
